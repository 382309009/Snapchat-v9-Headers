//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSObject.h"

#import "AVCamRecorderDelegate.h"
#import "SCVideoCapturePipelineDelegate.h"

@class AVCamRecorder, AVCaptureDeviceInput, AVCaptureSession, AVCaptureStillImageOutput, AVCaptureVideoDataOutput, FBKVOController, NSObject<OS_dispatch_queue>, NSString, SCVideoCapturePipeline, UIImage;

@interface AVCamCaptureManager : NSObject <AVCamRecorderDelegate, SCVideoCapturePipelineDelegate>
{
    BOOL frontFacingCamera;
    BOOL _addingAudioInputs;
    BOOL _frontFacingFlashOn;
    BOOL _regularSession;
    BOOL _resettingCamera;
    BOOL _takingPicture;
    BOOL _canAccessCamera;
    BOOL _initiatedRecording;
    BOOL _recording;
    BOOL _togglingCamera;
    BOOL _focusingExposure;
    BOOL _takePictureWhenDoneTogglingCamera;
    BOOL _takePictureWhenDoneFocusingExposure;
    AVCaptureDeviceInput *_audioInput;
    unsigned int _backgroundRecordingID;
    id <AVCamCaptureManagerDelegate> _delegate;
    id _deviceConnectedObserver;
    id _deviceDisconnectedObserver;
    id <SCFrontFacingFlashDelegate> _flashDelegate;
    UIImage *_image;
    int _orientation;
    AVCaptureSession *_session;
    AVCaptureStillImageOutput *_stillImageOutput;
    AVCaptureDeviceInput *_videoInput;
    AVCaptureVideoDataOutput *_videoOutput;
    SCVideoCapturePipeline *_videoCapturePipeline;
    AVCamRecorder *_recorder;
    id <SCCaptureManagerSessionDelegate> _sessionDelegate;
    AVCaptureVideoDataOutput *_captureDataOutput;
    NSObject<OS_dispatch_queue> *_sessionQueue;
    FBKVOController *_observeController;
}

@property(retain, nonatomic) FBKVOController *observeController; // @synthesize observeController=_observeController;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *sessionQueue; // @synthesize sessionQueue=_sessionQueue;
@property(nonatomic) BOOL takePictureWhenDoneFocusingExposure; // @synthesize takePictureWhenDoneFocusingExposure=_takePictureWhenDoneFocusingExposure;
@property(nonatomic) BOOL takePictureWhenDoneTogglingCamera; // @synthesize takePictureWhenDoneTogglingCamera=_takePictureWhenDoneTogglingCamera;
@property(retain, nonatomic) AVCaptureVideoDataOutput *captureDataOutput; // @synthesize captureDataOutput=_captureDataOutput;
@property(nonatomic) BOOL focusingExposure; // @synthesize focusingExposure=_focusingExposure;
@property(nonatomic) BOOL togglingCamera; // @synthesize togglingCamera=_togglingCamera;
@property(nonatomic, getter=isRecording) BOOL recording; // @synthesize recording=_recording;
@property(nonatomic) BOOL initiatedRecording; // @synthesize initiatedRecording=_initiatedRecording;
@property(nonatomic) __weak id <SCCaptureManagerSessionDelegate> sessionDelegate; // @synthesize sessionDelegate=_sessionDelegate;
@property(nonatomic) BOOL canAccessCamera; // @synthesize canAccessCamera=_canAccessCamera;
@property(nonatomic, getter=isTakingPicture) BOOL takingPicture; // @synthesize takingPicture=_takingPicture;
@property(retain, nonatomic) AVCamRecorder *recorder; // @synthesize recorder=_recorder;
@property(retain, nonatomic) SCVideoCapturePipeline *videoCapturePipeline; // @synthesize videoCapturePipeline=_videoCapturePipeline;
@property(retain, nonatomic) AVCaptureVideoDataOutput *videoOutput; // @synthesize videoOutput=_videoOutput;
@property(retain, nonatomic) AVCaptureDeviceInput *videoInput; // @synthesize videoInput=_videoInput;
@property(retain, nonatomic) AVCaptureStillImageOutput *stillImageOutput; // @synthesize stillImageOutput=_stillImageOutput;
@property(retain, nonatomic) AVCaptureSession *session; // @synthesize session=_session;
@property(nonatomic) BOOL resettingCamera; // @synthesize resettingCamera=_resettingCamera;
@property(nonatomic) BOOL regularSession; // @synthesize regularSession=_regularSession;
@property(nonatomic) int orientation; // @synthesize orientation=_orientation;
@property(retain, nonatomic) UIImage *image; // @synthesize image=_image;
@property(nonatomic) BOOL frontFacingFlashOn; // @synthesize frontFacingFlashOn=_frontFacingFlashOn;
@property(nonatomic) __weak id <SCFrontFacingFlashDelegate> flashDelegate; // @synthesize flashDelegate=_flashDelegate;
@property(nonatomic) __weak id deviceDisconnectedObserver; // @synthesize deviceDisconnectedObserver=_deviceDisconnectedObserver;
@property(nonatomic) __weak id deviceConnectedObserver; // @synthesize deviceConnectedObserver=_deviceConnectedObserver;
@property(nonatomic) __weak id <AVCamCaptureManagerDelegate> delegate; // @synthesize delegate=_delegate;
@property(nonatomic) unsigned int backgroundRecordingID; // @synthesize backgroundRecordingID=_backgroundRecordingID;
@property(retain, nonatomic) AVCaptureDeviceInput *audioInput; // @synthesize audioInput=_audioInput;
@property(nonatomic) BOOL addingAudioInputs; // @synthesize addingAudioInputs=_addingAudioInputs;
- (void).cxx_destruct;
- (BOOL)canToggleFrontFacingFlash;
- (id)generateTempOutputURL;
- (void)autoFocusAtPoint:(struct CGPoint)arg1;
- (void)continuousAutoFocusAtPoint:(struct CGPoint)arg1;
- (BOOL)focusPoint:(struct CGPoint)arg1 differentFromDevice:(id)arg2;
- (void)continuousExposureAtPoint:(struct CGPoint)arg1;
- (unsigned int)micCount;
- (unsigned int)cameraCount;
- (BOOL)frontFacingCameraInUse;
- (BOOL)toggleCamera;
- (void)asyncToggleCameraWithConfiguration:(CDUnknownBlockType)arg1 callback:(CDUnknownBlockType)arg2;
- (void)asyncToggleCameraWithCallback:(CDUnknownBlockType)arg1;
- (void)captureDisplayedImageWithCompletion:(CDUnknownBlockType)arg1;
- (void)captureStillImageWithCompletion:(CDUnknownBlockType)arg1;
- (BOOL)flashSupportedWithCurrentConfiguration;
- (id)croppedImage:(id)arg1 bounds:(struct CGRect)arg2;
- (id)imageWithEffectiveScale:(float)arg1;
- (void)ensureTorchModeOff;
- (void)startTorchIfFlashOn;
- (void)stopScan;
- (void)startScan;
- (void)stopRecording;
- (void)ensureVideoDirectoryExists;
@property(readonly, nonatomic) BOOL isSlowDevice;
- (void)startRecording;
- (void)unlockFocus;
- (void)lockFocus;
- (void)deviceAdjustingExposure:(id)arg1;
- (void)sessionRunningChanged:(id)arg1;
- (void)syncRemoveInputsAndOutputs;
- (void)syncStartSession;
- (void)syncStopSession;
- (void)asyncStartSessionWithCompletion:(CDUnknownBlockType)arg1;
- (void)asyncStopSessionWithCompletion:(CDUnknownBlockType)arg1;
- (void)asyncStartRegularAudioSession:(CDUnknownBlockType)arg1;
- (void)enableAudioInput;
- (void)disableAudioInput;
- (void)disableAudioInputWithCompletion:(CDUnknownBlockType)arg1;
- (void)didBecomeActive;
- (void)willResignActive;
- (void)setVideoCapturePipelineActive:(BOOL)arg1;
- (void)sessionWasInterrupted:(id)arg1;
- (void)sessionInterruptionEnded:(id)arg1;
- (void)videoCapturePipeline:(id)arg1 didUpdateFrameRate:(int)arg2;
- (void)videoCapturePipeline:(id)arg1 didRenderDataImage:(id)arg2;
- (void)videoCapturePipeline:(id)arg1 didDetectSnapcode:(id)arg2 withVersion:(int)arg3;
- (void)videoCapturePipeline:(id)arg1 didFailRecordingWithError:(id)arg2;
- (void)videoCapturePipeline:(id)arg1 didFinishRecordingToURL:(id)arg2;
- (void)endVideoRecording;
- (void)videoCapturePipelineDidBeginRecording:(id)arg1;
- (void)setSessionPreset:(id)arg1;
- (void)setupNewSession;
- (void)addVideoOutputs;
- (void)removeVideoOutputs;
- (void)addLiveVideoOutputs;
- (void)removeLiveVideoOutputs;
- (void)switchToRegularSessionWithCompletion:(CDUnknownBlockType)arg1;
- (void)setLiveVideoFrameDuration;
- (void)setLiveVideoConnection;
- (void)startCaptureVideoDataOutputWithSampleBufferDelegate:(id)arg1 queue:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (void)dealloc;
- (id)init;
- (void)recorder:(id)arg1 recordingDidFinishToOutputFileURL:(id)arg2 error:(id)arg3;
- (void)recorderRecordingDidBegin:(id)arg1;
- (id)audioDevice;
- (id)firstAvailableCamera;
- (id)backFacingCamera;
- (id)frontFacingCamera;
- (void)deviceOrientationDidChange;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned int hash;
@property(readonly) Class superclass;

@end

