//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSObject.h"

#import "GCDAsyncSocketDelegate.h"

@class GCDAsyncSocket, NSDate, NSDictionary, NSMutableDictionary, NSMutableSet, NSString, NSTimer;

@interface SCTCPSession : NSObject <GCDAsyncSocketDelegate>
{
    BOOL _disconnecting;
    unsigned short _port;
    id <SCTCPSessionDelegate> _delegate;
    id <SCTCPSessionDataSource> _dataSource;
    NSDictionary *_authDictionary;
    NSTimer *_tcpDisabledMaxLimitRetryConnectTimer;
    NSString *_host;
    int _maxTCPMessagesPerSecond;
    int _messageCounter;
    NSTimer *_messageCounterTimer;
    unsigned int _nextWriteTag;
    unsigned int _numberOfRetrys;
    GCDAsyncSocket *_socket;
    int _state;
    NSMutableDictionary *_writeCompletionHandlers;
    int _reachabilityStatus;
    NSMutableSet *_activePingRequests;
    NSDate *_lastConnectedTime;
}

@property(retain, nonatomic) NSDate *lastConnectedTime; // @synthesize lastConnectedTime=_lastConnectedTime;
@property(retain, nonatomic) NSMutableSet *activePingRequests; // @synthesize activePingRequests=_activePingRequests;
@property(nonatomic) int reachabilityStatus; // @synthesize reachabilityStatus=_reachabilityStatus;
@property(retain, nonatomic) NSMutableDictionary *writeCompletionHandlers; // @synthesize writeCompletionHandlers=_writeCompletionHandlers;
@property(nonatomic) int state; // @synthesize state=_state;
@property(retain, nonatomic) GCDAsyncSocket *socket; // @synthesize socket=_socket;
@property(nonatomic) unsigned short port; // @synthesize port=_port;
@property(nonatomic) unsigned int numberOfRetrys; // @synthesize numberOfRetrys=_numberOfRetrys;
@property(nonatomic) unsigned int nextWriteTag; // @synthesize nextWriteTag=_nextWriteTag;
@property(retain, nonatomic) NSTimer *messageCounterTimer; // @synthesize messageCounterTimer=_messageCounterTimer;
@property(nonatomic) int messageCounter; // @synthesize messageCounter=_messageCounter;
@property(nonatomic) int maxTCPMessagesPerSecond; // @synthesize maxTCPMessagesPerSecond=_maxTCPMessagesPerSecond;
@property(copy, nonatomic) NSString *host; // @synthesize host=_host;
@property(nonatomic) NSTimer *tcpDisabledMaxLimitRetryConnectTimer; // @synthesize tcpDisabledMaxLimitRetryConnectTimer=_tcpDisabledMaxLimitRetryConnectTimer;
@property(nonatomic) BOOL disconnecting; // @synthesize disconnecting=_disconnecting;
@property(retain, nonatomic) NSDictionary *authDictionary; // @synthesize authDictionary=_authDictionary;
@property(nonatomic) __weak id <SCTCPSessionDataSource> dataSource; // @synthesize dataSource=_dataSource;
@property(nonatomic) __weak id <SCTCPSessionDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (void)completedWritingWithTag:(long)arg1 error:(id)arg2;
- (void)markAllSendingMessagesFailed;
- (void)connectionTimeoutTimerFired:(id)arg1;
- (void)networkReachabilityStatusChanged:(id)arg1;
- (BOOL)isNetworkReachable;
- (void)tcpMaxTimerFired;
- (void)messageCounterTimerFired;
- (void)startMessageCounterTimer;
- (void)incrementReadCount;
- (id)protocolErrorDictionaryWithMessage:(id)arg1;
- (id)disconnectDictionary;
- (id)connectDictionary;
- (void)writeDictionaryToSocket:(id)arg1;
- (void)handlePingResponse:(id)arg1;
- (void)handleErrorResponse:(id)arg1;
- (void)handleProtocolErrorResponse:(id)arg1;
- (void)handleConnectResponse:(id)arg1;
- (void)handleBodyData:(id)arg1;
- (unsigned int)lengthOfBodyFromHeaderData:(id)arg1;
- (void)socketDidSecure:(id)arg1;
- (void)socketDidDisconnect:(id)arg1 withError:(id)arg2;
- (double)socket:(id)arg1 shouldTimeoutWriteWithTag:(long)arg2 elapsed:(double)arg3 bytesDone:(unsigned int)arg4;
- (double)socket:(id)arg1 shouldTimeoutReadWithTag:(long)arg2 elapsed:(double)arg3 bytesDone:(unsigned int)arg4;
- (void)socket:(id)arg1 didWriteDataWithTag:(long)arg2;
- (void)socket:(id)arg1 didReadData:(id)arg2 withTag:(long)arg3;
- (void)socket:(id)arg1 didConnectToHost:(id)arg2 port:(unsigned short)arg3;
- (double)retryDelay;
- (void)resetRetryCount;
- (void)retryConnectingToHost;
- (void)pingRequestCompletedWithStatus:(BOOL)arg1 error:(id)arg2;
- (void)makePingRequest;
- (void)connectToHost:(id)arg1 onPort:(unsigned short)arg2;
- (BOOL)shouldStartSession;
- (BOOL)isDisconnecting;
- (BOOL)isConnecting;
- (BOOL)isConnected;
- (void)writeParameters:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)endSession;
- (id)getStateString;
- (void)startConnectionTimeout:(double)arg1;
- (void)startSession;
- (void)dealloc;
- (id)initWithDelegate:(id)arg1 dataSource:(id)arg2;

@end

