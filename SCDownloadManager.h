//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSObject.h"

@class NSMutableDictionary, NSObject<OS_dispatch_group>, NSObject<OS_dispatch_queue>, NSSet, SCDownloadTaskPool;

@interface SCDownloadManager : NSObject
{
    int _numConcurrentBackgroundRequests;
    int _numConcurrentRequests;
    int _maxConcurrentBackgroundRequests;
    int _maxConcurrentRequests;
    SCDownloadTaskPool *_allTasks;
    NSSet *_allTaskPools;
    NSMutableDictionary *_runningTasks;
    SCDownloadTaskPool *_wwanTasks;
    NSObject<OS_dispatch_queue> *_schedulingQueue;
    NSObject<OS_dispatch_group> *_dispatchGroup;
}

+ (id)shared;
@property(retain, nonatomic) NSObject<OS_dispatch_group> *dispatchGroup; // @synthesize dispatchGroup=_dispatchGroup;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *schedulingQueue; // @synthesize schedulingQueue=_schedulingQueue;
@property(retain, nonatomic) SCDownloadTaskPool *wwanTasks; // @synthesize wwanTasks=_wwanTasks;
@property(retain, nonatomic) NSMutableDictionary *runningTasks; // @synthesize runningTasks=_runningTasks;
@property(retain, nonatomic) NSSet *allTaskPools; // @synthesize allTaskPools=_allTaskPools;
@property(retain, nonatomic) SCDownloadTaskPool *allTasks; // @synthesize allTasks=_allTasks;
@property(nonatomic) int maxConcurrentRequests; // @synthesize maxConcurrentRequests=_maxConcurrentRequests;
@property(nonatomic) int maxConcurrentBackgroundRequests; // @synthesize maxConcurrentBackgroundRequests=_maxConcurrentBackgroundRequests;
@property(nonatomic) int numConcurrentRequests; // @synthesize numConcurrentRequests=_numConcurrentRequests;
@property(nonatomic) int numConcurrentBackgroundRequests; // @synthesize numConcurrentBackgroundRequests=_numConcurrentBackgroundRequests;
- (void).cxx_destruct;
- (void)reset;
- (id)removeTaskForKey:(id)arg1;
- (void)setMaxConcurrentRequests:(int)arg1 maxConcurrentBackgroundRequests:(int)arg2;
- (void)checkSchedule;
- (void)didRunTaskWithKey:(id)arg1;
- (void)willRunTask:(id)arg1;
- (BOOL)shouldRunTask:(id)arg1;
- (BOOL)run;
- (void)boostRequestWithKey:(id)arg1 toHigherPriority:(int)arg2 toHigherConnectivity:(int)arg3;
- (void)cancelRequestWithKey:(id)arg1 successQueue:(id)arg2 failureQueue:(id)arg3 successBlock:(CDUnknownBlockType)arg4 failureBlock:(CDUnknownBlockType)arg5;
- (void)submitRequest:(id)arg1 successQueue:(id)arg2 failureQueue:(id)arg3 successBlock:(CDUnknownBlockType)arg4 failureBlock:(CDUnknownBlockType)arg5;
- (id)init;

@end

