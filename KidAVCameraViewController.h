//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "UIViewController.h"

#import "SCCameraOwner.h"
#import "UIAlertViewDelegate.h"
#import "UIGestureRecognizerDelegate.h"

@class AVCamCaptureManager, FlashButton, NSString, NSTimer, SCCameraTimer, SCGrowingButton, UIButton, UIImageView, UIView;

@interface KidAVCameraViewController : UIViewController <UIAlertViewDelegate, UIGestureRecognizerDelegate, SCCameraOwner>
{
    BOOL isResigningActive;
    BOOL shouldResetCamera;
    BOOL isFirstLaunch;
    double timeRecordingStarted;
    double timeSettingUpCamera;
    BOOL _triedToCaptureImage;
    BOOL _cameraError;
    BOOL _pendingCameraReset;
    BOOL _showingNeedCameraAndMicrophoneAccessAlertView;
    BOOL _showingNeedCameraAccessAlertView;
    UIView *_cameraView;
    SCGrowingButton *_frontCameraButton;
    FlashButton *_flashButton;
    UIImageView *_focusCrosshairs;
    float _beginningScale;
    float _effectiveScale;
    NSTimer *_timer;
    UIView *_cameraOverlay;
    UIImageView *_videoBar;
    AVCamCaptureManager *_captureManager;
    UIView *_captureVideoPreviewView;
    float _brightness;
    SCCameraTimer *_cameraTimer;
    UIView *_flashView;
    UIButton *_settingsButton;
}

@property(nonatomic) BOOL showingNeedCameraAccessAlertView; // @synthesize showingNeedCameraAccessAlertView=_showingNeedCameraAccessAlertView;
@property(nonatomic) BOOL showingNeedCameraAndMicrophoneAccessAlertView; // @synthesize showingNeedCameraAndMicrophoneAccessAlertView=_showingNeedCameraAndMicrophoneAccessAlertView;
@property(nonatomic) BOOL pendingCameraReset; // @synthesize pendingCameraReset=_pendingCameraReset;
@property(retain, nonatomic) UIButton *settingsButton; // @synthesize settingsButton=_settingsButton;
@property(retain, nonatomic) UIView *flashView; // @synthesize flashView=_flashView;
@property(retain, nonatomic) SCCameraTimer *cameraTimer; // @synthesize cameraTimer=_cameraTimer;
@property(nonatomic) BOOL cameraError; // @synthesize cameraError=_cameraError;
@property(nonatomic) float brightness; // @synthesize brightness=_brightness;
@property(nonatomic) __weak UIView *captureVideoPreviewView; // @synthesize captureVideoPreviewView=_captureVideoPreviewView;
@property(retain, nonatomic) AVCamCaptureManager *captureManager; // @synthesize captureManager=_captureManager;
@property(retain, nonatomic) UIImageView *videoBar; // @synthesize videoBar=_videoBar;
@property(nonatomic) BOOL triedToCaptureImage; // @synthesize triedToCaptureImage=_triedToCaptureImage;
@property(retain, nonatomic) UIView *cameraOverlay; // @synthesize cameraOverlay=_cameraOverlay;
@property(retain, nonatomic) NSTimer *timer; // @synthesize timer=_timer;
@property float effectiveScale; // @synthesize effectiveScale=_effectiveScale;
@property float beginningScale; // @synthesize beginningScale=_beginningScale;
@property(retain, nonatomic) UIImageView *focusCrosshairs; // @synthesize focusCrosshairs=_focusCrosshairs;
@property(retain, nonatomic) FlashButton *flashButton; // @synthesize flashButton=_flashButton;
@property(retain, nonatomic) SCGrowingButton *frontCameraButton; // @synthesize frontCameraButton=_frontCameraButton;
@property(retain, nonatomic) UIView *cameraView; // @synthesize cameraView=_cameraView;
- (void).cxx_destruct;
- (void)presentSnapchatDeclinedTransitionAlert;
- (void)presentSnapchatTransitionAlertIfNecessary;
- (void)handleNeedCameraAccessAlertDidDismiss;
- (void)handleNeedCameraAndMicrophoneAccessAlertDidDismiss;
- (void)handleSnapKidzToSnapchatAlert:(id)arg1 didDismissWithButtonIndex:(int)arg2;
- (void)alertView:(id)arg1 didDismissWithButtonIndex:(int)arg2;
- (BOOL)isFrontFacingFlashOn;
- (void)turnOffFrontFacingFlash;
- (void)turnOnFrontFacingFlashWithAlpha:(float)arg1;
- (void)cameraSetupAfterStart;
- (void)startCamera;
- (void)handleTapFrom:(id)arg1;
- (void)handlePinchFrom:(id)arg1;
- (BOOL)gestureRecognizer:(id)arg1 shouldRecognizeSimultaneouslyWithGestureRecognizer:(id)arg2;
- (BOOL)gestureRecognizerShouldBegin:(id)arg1;
- (BOOL)point:(struct CGPoint)arg1 insideFrame:(struct CGRect)arg2;
- (BOOL)point:(struct CGPoint)arg1 isNearOrInsideFrame:(struct CGRect)arg2;
- (void)makeAndApplyAffineTransform;
- (void)toggledCamera:(BOOL)arg1;
- (void)captureManagerRecordingFinished:(id)arg1 toOutputFileURL:(id)arg2 error:(id)arg3;
- (void)captureManagerStillImageCaptured:(id)arg1;
- (void)captureManagerSessionInterruptionWasEnded:(id)arg1;
- (void)captureManagerSessionWasInterrupted:(id)arg1;
- (id)resizedImage:(id)arg1 newSize:(struct CGSize)arg2 transform:(struct CGAffineTransform)arg3 drawTransposed:(BOOL)arg4 interpolationQuality:(int)arg5;
- (id)croppedImage:(id)arg1 bounds:(struct CGRect)arg2;
- (void)settingsPressed;
- (void)flashPressed;
- (void)frontCameraButtonPressed;
- (void)endRecordingAction;
- (void)longPress:(id)arg1;
- (void)resetVideo;
- (void)hideButtons;
- (void)grow:(id)arg1;
- (BOOL)isFlashSupported;
- (id)cameraWithPosition:(int)arg1;
- (unsigned int)cameraCount;
- (void)presentPreviewForVideoWithCaptureManager:(id)arg1 toOutputFileURL:(id)arg2;
- (void)presentPreviewForImage:(id)arg1;
- (void)viewDidBecomeActive;
- (void)viewWillResignActive;
- (void)dealloc;
- (void)captureSessionDidStopWithError:(id)arg1;
- (unsigned int)supportedInterfaceOrientations;
- (BOOL)shouldDisplayStatusBar;
- (void)viewDidDisappear:(BOOL)arg1;
- (void)viewDidLoad;
- (void)resetCameraOptionButtons;
- (void)resetCamera;
- (void)resetView;
- (void)viewWillAppear:(BOOL)arg1;
- (void)notifyUserOfRestrictedCameraIfNecessary;
- (BOOL)notifyUserOfDeniedCameraIfNecessary;
- (BOOL)notifyUserOfCameraAndMicrophoneUsageIfNecessary;
- (void)notifyUserAfterStartCameraIfNecessary;
- (void)setupCaptureVideoPreviewView;
- (void)initializeAndAddSettingsButton;
- (void)initializeAndAddFlashButton;
- (void)initializeAndAddCameraFlipButton;
- (void)loadView;
- (void)applicationDidFinishLaunching:(id)arg1;
- (BOOL)logOnViewDidAppear;
- (id)getPageViewName;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned int hash;
@property(readonly) Class superclass;

@end

